MRuby::GemBox.new do |conf|
  # Use standard Kernel#sprintf method
  conf.gem :core => "mruby-sprintf"

  # Use standard print/puts/p
  conf.gem :core => "mruby-print"

  # Use standard Math module
  conf.gem :core => "mruby-math"

  # Use standard Time class
  conf.gem :core => "mruby-time"

  # Use standard Struct class
  conf.gem :core => "mruby-struct"

  # Use extensional Enumerable module
  conf.gem :core => "mruby-enum-ext"

  # Use extensional String class
  conf.gem :core => "mruby-string-ext"

  # Use extensional Numeric class
  conf.gem :core => "mruby-numeric-ext"

  # Use extensional Array class
  conf.gem :core => "mruby-array-ext"

  # Use extensional Hash class
  conf.gem :core => "mruby-hash-ext"

  # Use extensional Range class
  conf.gem :core => "mruby-range-ext"

  # Use extensional Proc class
  conf.gem :core => "mruby-proc-ext"

  # Use extensional Symbol class
  conf.gem :core => "mruby-symbol-ext"

  # Use Random class
  conf.gem :core => "mruby-random"

  # Use extensional Object class
  conf.gem :core => "mruby-object-ext"

  # Use ObjectSpace class
  conf.gem :core => "mruby-objectspace"

  # Use Fiber class
  conf.gem :core => "mruby-fiber"

  # Use Enumerator class (require mruby-fiber)
  conf.gem :core => "mruby-enumerator"

  # Use Enumerable::Lazy class (require mruby-enumerator)
  conf.gem :core => "mruby-enum-lazy"

  # Use extended toplevel object (main) methods
  conf.gem :core => "mruby-toplevel-ext"

  # Generate mirb command
  # conf.gem :core => "mruby-bin-mirb"

  # Generate mruby command
  # conf.gem :core => "mruby-bin-mruby"

  # Generate mruby-strip command
  # conf.gem :core => "mruby-bin-strip"

  # Use extensional Kernel module
  conf.gem :core => "mruby-kernel-ext"

  conf.gem :core => "mruby-eval"
  conf.gem :core => "mruby-exit"

  # Use to TestUnit

  # Use to pack unpack functions
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-hs-regexp")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-io")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-dir")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-tempfile")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-require")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-mtest")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-socket")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-pack")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-polarssl")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-qrcode")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-miniz")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-sleep")
  #conf.gem File.join(MRUBY_PAX_MGEM, "mruby-msgpack")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-json")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-context")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-pax-network")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-pax")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-ripemd")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-hmac")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-sha2")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-sha1")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-base58")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-thread")
  #conf.gem File.join(MRUBY_PAX_MGEM, "mruby-bignum")
  #conf.gem File.join(MRUBY_PAX_MGEM, "mruby-simple-random")
  #conf.gem File.join(MRUBY_PAX_MGEM, "mruby-mock")
  #conf.gem File.join(MRUBY_PAX_MGEM, "mruby-tinyxml2")
  conf.gem File.join(MRUBY_PAX_MGEM, "mruby-simplemsgpack")
end

